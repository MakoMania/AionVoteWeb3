{
    "swagger": "2.0",
    "info": {
       "description": "This is the documentation for `AION VOTE WEB APPLICATION`",
       "version": "1.0.0",
       "title": "AION VOTE APPLICATION",
       "termsOfService": "http://swagger.io/terms/",
       "contact": {
          "email": "cjnjenga@gmail.com"
       },
       "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
       }
    },
    "host": "localhost:7900",
    "basePath": "/",
    "tags": [
       {
          "name": "Admin",
          "description": "This API for `ADMIN PORTAL`. "
       }
    ],
    "schemes": [
       "http",
       "https"
    ],
    "paths": {
       "/admin.portal/signup": {
          "post": {
             "tags": [
                "Admin"
             ],
             "summary": "Create an account for a user",
             "description": "",
             "operationId": "signup",
             "consumes": [
                "application/json"
             ],
             "produces": [
                "application/json"
             ],
             "parameters": [
                {
                   "in": "body",
                   "name": "body",
                   "description": "A function for paying goods and services",
                   "required": true,
                   "schema": {
                      "$ref": "#/definitions/signupModel"
                   }
                }
             ],
             "responses": {
               "401.003.01": {
                  "description": "Error Occurred - Invalid Access Token"
               },   
               "200": {
                  "description": "successful operation",
                  "schema": {
                     "items": {
                        "$ref": "#/definitions/signupResponse"
                     }
                  }
               }
             },
             "security": [
                {
                   "petstore_auth": [
                      "write:pets",
                      "read:pets"
                   ]
                }
             ]
          }
       },
       "/admin.portal/verify": {
         "post": {
            "tags": [
               "Admin"
            ],
            "summary": "Verify email address",
            "description": "",
            "operationId": "verify",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "A function for paying goods and services",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/emailModel"
                  }
               }
            ],
            "responses": {
              "401.003.01": {
                 "description": "Error Occurred - Invalid Access Token"
              },   
              "200": {
                 "description": "successful operation",
                 "schema": {
                    "items": {
                       "$ref": "#/definitions/signupResponse"
                    }
                 }
              }
            },
            "security": [
               {
                  "petstore_auth": [
                     "write:pets",
                     "read:pets"
                  ]
               }
            ]
         }
      },
      "/admin.portal/addproposal": {
         "post": {
            "tags": [
               "Admin"
            ],
            "summary": "Add proposal",
            "description": "",
            "operationId": "proposal",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "A function for adding polls to contract",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/addProposalModel"
                  }
               }
            ],
            "responses": {
              "401.003.01": {
                 "description": "Error Occurred - Invalid Access Token"
              },   
              "200": {
                 "description": "successful operation",
                 "schema": {
                    "items": {
                       "$ref": "#/definitions/signupResponse"
                    }
                 }
              }
            },
            "security": [
               {
                  "petstore_auth": [
                     "write:pets",
                     "read:pets"
                  ]
               }
            ]
         }
      }
    },
    "securityDefinitions": {
       "petstore_auth": {
          "type": "oauth2",
          "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
          "flow": "implicit",
          "scopes": {
             "write:pets": "modify pets in your account",
             "read:pets": "read your pets"
          }
       },
       "api_key": {
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
       }
    },
    "definitions": {
       "loginModel":{
         "type": "object",
         "properties": {
            "username": {
               "type": "string"
            },
            "password": {
               "type": "string"
            }
         },
         "xml": {
            "name": "Order"
         }
       },
       "loginModelResponse": {
         "type": "object",
         "properties": {
            "success":{
              "type":"boolean"
            },
            "data":{
              "type": "object",
              "properties": {
                 "consumerKey": {
                    "type": "string"
                 },
                 "consumerSecret": {
                    "type": "string"
                 },
                 "apikey": {
                    "type": "string"
                 }
              }
            }
         },
         "xml": {
            "name": "Pet"
         }
       },
       "signupModel": {
          "type": "object",
          "properties": {
             "email": {
                "type": "string"
             },
             "username": {
                "type": "string"
             },
             "password": {
                "type": "string"
             }
          },
          "xml": {
             "name": "Order"
          }
       },
       "signupResponse": {
          "type": "object",
          "properties": {
             "success":{
               "type":"boolean"
             },
             "message":{
               "type": "string"
            }
          },
          "xml": {
             "name": "Pet"
          }
       },
       "emailModel": {
         "type": "object",
         "properties": {
            "email":{
              "type": "string"
           }
         }
       },
       "addProposalModel": {
          "type": "object",
          "properties": {
            "contract": {
               "type": "string"
            },
            "type": {
               "type": "string"
            }
          },
          "xml": {
             "name": "Category"
          }
       },
       "User": {
          "type": "object",
          "properties": {
             "id": {
                "type": "integer",
                "format": "int64"
             },
             "username": {
                "type": "string"
             },
             "firstName": {
                "type": "string"
             },
             "lastName": {
                "type": "string"
             },
             "email": {
                "type": "string"
             },
             "password": {
                "type": "string"
             },
             "phone": {
                "type": "string"
             },
             "userStatus": {
                "type": "integer",
                "format": "int32",
                "description": "User Status"
             }
          },
          "xml": {
             "name": "User"
          }
       },
       "Tag": {
          "type": "object",
          "properties": {
             "id": {
                "type": "integer",
                "format": "int64"
             },
             "name": {
                "type": "string"
             }
          },
          "xml": {
             "name": "Tag"
          }
       },
       "ApiResponse": {
          "type": "object",
          "properties": {
             "code": {
                "type": "integer",
                "format": "int32"
             },
             "type": {
                "type": "string"
             },
             "message": {
                "type": "string"
             }
          }
       }
    }
 }



